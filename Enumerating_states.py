def state_to_num(state):
    N = state[0]+3*state[1] + 9*state[2]+27*state[3]+81*state[4]+243*state[5]+729*state[6]+2187*state[7]+6561*state[8]
    return N

def num_to_state(N):
    i = N//(3**8)
    h = (N - i*(3**8))//(3**7)
    g = (N - i*(3**8) - h*(3**7))//(3**6)
    f = (N - i*(3**8) - h*(3**7) - g*(3**6))//(3**5)
    e = (N - i*(3**8) - h*(3**7) - g*(3**6) - f*(3**5))//(3**4)
    d = (N - i*(3**8) - h*(3**7) - g*(3**6) - f*(3**5) - e*(3**4))//(3**3)
    c = (N - i*(3**8) - h*(3**7) - g*(3**6) - f*(3**5) - e*(3**4) - d*(3**3))//(3**2)
    b = (N - i*(3**8) - h*(3**7) - g*(3**6) - f*(3**5) - e*(3**4) - d*(3**3) - c*(3**2))//(3**1)
    a = (N - i*(3**8) - h*(3**7) - g*(3**6) - f*(3**5) - e*(3**4) - d*(3**3) - c*(3**2) - b*(3**1))//(3**0)
    
    return([a,b,c,d,e,f,g,h,i])